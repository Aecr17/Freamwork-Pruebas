name: Proyecto Tienda Nube

on: 
  push:
  
  workflow_dispatch: # Permite ejecutar el flow manualmente

jobs:
  build:
    runs-on: ubuntu-latest  # Usar Ubuntu como sistema operativo

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # Instalar la última versión estable de Google Chrome en la instancia de Ubuntu
    - name: Install Chrome
      run: |
        sudo apt-get update
        sudo apt-get install -y wget unzip
        wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
        sudo dpkg -i google-chrome-stable_current_amd64.deb || sudo apt-get -f install -y
        google-chrome --version  # Comprobar la versión instalada de Chrome
    
    # Instalar la última versión estable de ChromeDriver compatible con la versión de Chrome
    - name: Install ChromeDriver
      run: |
        CHROME_VERSION=$(google-chrome --version | grep -oP '\d+\.\d+\.\d+')
        CHROME_DRIVER_VERSION=$(curl -sS chromedriver.storage.googleapis.com/LATEST_RELEASE_$CHROME_VERSION)
        wget -N https://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip
        unzip chromedriver_linux64.zip
        sudo mv chromedriver /usr/local/bin/
        sudo chmod +x /usr/local/bin/chromedriver
        chromedriver --version  # Comprobar la versión instalada de ChromeDriver

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Run tests
      run: |
        pytest --html=report.html

    - name: Upload test report
      uses: actions/upload-artifact@v3
      with:
        name: test-report
        path: report.html



